package com.unir.springboot.app.msauth.security;

import java.util.Collections;

import javax.naming.AuthenticationException;

import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.unir.springboot.app.msauth.models.User;

import io.jsonwebtoken.io.IOException;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;

public class JwtAuthFilter extends UsernamePasswordAuthenticationFilter {

	@Override
	public Authentication attempAuthentication(HttpServletRequest request,
												HttpServletResponse response) throws AuthenticationException{
		
		User authCredentials = new User();
		
		try {
			authCredentials = new ObjectMapper().readValue(request.getReader(), User.class)
		} catch (IOException e) {
		}
		
		UsernamePasswordAuthenticationToken usernamePAT = new UsernamePasswordAuthenticationToken(
				authCredentials.getUsername(), 
				authCredentials.getPassword(),
				Collections.emptyList());
		
		
		return getAuthenticationManager().authenticate(usernamePAT);
	}

}
